<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>